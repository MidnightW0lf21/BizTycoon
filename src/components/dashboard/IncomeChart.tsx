
"use client"

import { Bar, BarChart, CartesianGrid, ResponsiveContainer, XAxis, YAxis } from "recharts"
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card"
import { ChartConfig, ChartContainer, ChartTooltip, ChartTooltipContent } from "@/components/ui/chart"
import { useGame } from "@/contexts/GameContext"
import { useEffect, useState } from "react"

const chartConfig = {
  income: {
    label: "Income",
    color: "hsl(var(--primary))",
  },
} satisfies ChartConfig

export function IncomeChart() {
  const { businesses, getBusinessIncome } = useGame();
  const [chartData, setChartData] = useState<any[]>([]);

  useEffect(() => {
    const data = businesses
      .filter(b => b.level > 0)
      .map(business => ({
        name: business.name.length > 15 ? `${business.name.substring(0,12)}...` : business.name, // Truncate long names
        income: getBusinessIncome(business.id),
      }))
      .sort((a,b) => b.income - a.income) // Sort by income desc
      .slice(0, 5); // Show top 5
      
    setChartData(data);
  }, [businesses, getBusinessIncome]);

  if (chartData.length === 0) {
    return (
      <Card className="h-[400px] flex items-center justify-center">
        <CardContent>
          <p className="text-muted-foreground">No income data yet. Start some businesses!</p>
        </CardContent>
      </Card>
    )
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle>Top Business Income / Sec</CardTitle>
        <CardDescription>Income generated by your top performing businesses.</CardDescription>
      </CardHeader>
      <CardContent>
        <ChartContainer config={chartConfig} className="h-[300px] w-full">
          <ResponsiveContainer width="100%" height="100%">
            <BarChart accessibilityLayer data={chartData} margin={{ top: 20, right: 20, left: 20, bottom: 5 }}>
              <CartesianGrid vertical={false} />
              <XAxis
                dataKey="name"
                tickLine={false}
                tickMargin={10}
                axisLine={false}
              />
              <YAxis 
                tickFormatter={(value) => `$${value.toLocaleString('en-US')}`}
              />
              <ChartTooltip
                cursor={false}
                content={<ChartTooltipContent indicator="dot" />}
              />
              <Bar dataKey="income" fill="var(--color-income)" radius={4} />
            </BarChart>
          </ResponsiveContainer>
        </ChartContainer>
      </CardContent>
    </Card>
  )
}
